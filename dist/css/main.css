@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, .menu__category, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
*
* Border-box sizing by default
*
**/
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

/**
*
* Base font size for REM usage
*
**/
html {
  height: 100%;
  font-size: 62.5%; }

/**
*
* Clearfix
*
**/
.cf:after {
  content: "";
  display: table;
  clear: both; }

/**
*
* Vertical align
*
**/
/**
*
* Z-index levels
*
**/
/**
*
* REM mixin with pixel fallback
* -- Eduardo Bou√ßas (https://github.com/eduardoboucas/)
*
* NOTE: You must set the font-size to 62.5% on the html element!
*
**/
/**
*
* Colours named using http://chir.ag/projects/name-that-color/#FFFFFF
*
**/
/**
*
* Import fonts
*
**/
/**
*
* Set up a few global variables
*
**/
/**
*
* Set up a few standard breakpoints
*
**/
/**
*
* Page width constrain. Set the max and minimum width and use `@extend %constrain` to constrain the width.
*
**/
/**
*
* Set up a few basic font sizes for a consistent look across the site.
*
**/
body {
  font-size: 16px;
  font-size: 1.6rem;
  font-family: Arial, Helvetica, Verdana, sans-serif;
  -webkit-font-smoothing: antialiased;
  color: #333; }

h1,
h2,
h3,
.menu__category,
h4 {
  font-family: "Lato", Arial, Helvetica, Verdana, sans-serif; }

h1 {
  font-size: 29px;
  font-size: 2.9rem;
  line-height: 38px;
  line-height: 3.8rem;
  margin-bottom: 15px; }

h2 {
  font-size: 23px;
  font-size: 2.3rem;
  line-height: 29px;
  line-height: 2.9rem;
  margin-bottom: 15px; }

h3, .menu__category {
  font-size: 21px;
  font-size: 2.1rem;
  line-height: 26px;
  line-height: 2.6rem; }

h4 {
  font-size: 18px;
  font-size: 1.8rem;
  line-height: 23px;
  line-height: 2.3rem; }

p {
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 22px;
  line-height: 2.2rem;
  margin-bottom: 15px; }

strong {
  font-weight: 700; }

td {
  vertical-align: top; }

.header {
  padding: 0 20px;
  background-color: #fff;
  text-align: center; }

.header__logo {
  max-width: 350px; }

.intro {
  padding: 20px;
  background-color: #f7f7f7;
  text-align: center; }

.intro__wrapper {
  max-width: 600px;
  margin: 0 auto;
  padding: 20px;
  background-color: #fff;
  border-radius: 5px; }

.menu {
  padding: 20px;
  background-color: #f7f7f7; }

.menu__wrapper, .menu__summary {
  position: relative;
  max-width: 600px;
  margin: 0 auto 20px;
  padding: 20px;
  background-color: #fff;
  border-radius: 3px; }

.menu__table {
  width: 100%; }

.menu__intro {
  padding-bottom: 20px;
  margin-bottom: 20px; }
  .menu__intro strong {
    font-style: italic; }

.menu__column-blank--1 {
  width: 0; }

.menu__column-heading {
  font-size: 14px;
  font-size: 1.4rem;
  line-height: 16px;
  line-height: 1.6rem;
  text-align: center;
  color: #237b98;
  font-weight: 700;
  /* 	Have to specify font size and line height explicity inside of media query. 
		This is because SASS will not let you @extend an outer selector from within @media */ }
  @media screen and (min-width: 420px) {
    .menu__column-heading {
      font-size: 20px;
      font-size: 2.0rem;
      line-height: 22px;
      line-height: 2.2rem;
      text-align: center;
      margin-bottom: 0; } }

.menu__category {
  padding: 10px 0 5px;
  color: #237b98; }
  .menu__category--0 {
    /* Allow Diner 1 and Diner 2 column headings closer in */
    padding-top: 5px; }

.menu__description {
  font-size: 14px;
  font-size: 1.4rem;
  line-height: 17px;
  line-height: 1.7rem;
  width: 60%;
  vertical-align: middle;
  /* 	Have to specify font size and line height explicity inside of media query. 
		This is because SASS will not let you @extend an outer selector from within @media */ }
  .menu__description--1 {
    width: 0; }
    .menu__description--1 label {
      display: none; }
  @media screen and (min-width: 420px) {
    .menu__description {
      font-size: 16px;
      font-size: 1.6rem;
      line-height: 22px;
      line-height: 2.2rem; } }

.menu__choice {
  width: 20%;
  vertical-align: middle;
  text-align: center; }

/* 
*	Checkboxes
*/
input[type='checkbox'] {
  -moz-appearance: none;
  -webkit-appearance: none;
  width: 21px;
  height: 21px;
  background-color: #fff;
  border-radius: 3px;
  border: 1px solid #237b98; }

input[type='checkbox']:checked {
  background-color: #237b98; }

/* 
*	Menu total cost and summary section
*/
.menu__summary {
  text-align: center; }

.menu__cost-wrapper {
  display: block;
  margin-bottom: 20px; }
  @media screen and (min-width: 420px) {
    .menu__cost-wrapper {
      display: inline-block;
      width: 50%;
      vertical-align: middle;
      margin-bottom: 0;
      text-align: left; } }

@media screen and (min-width: 420px) {
  .menu__order {
    display: inline-block;
    width: 50%;
    vertical-align: middle;
    margin-left: -6px;
    text-align: right; } }

.menu__total {
  margin-bottom: 0; }

/* 
*	Error messages
*/
.menu__errors {
  color: #b8222d;
  text-align: left; }

.menu__error {
  /* Messages triggered on and off with javaScript via their id hook */
  display: none; }

.menu__waiter {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -75px;
  width: 150px;
  background-color: #da3743;
  border-radius: 50%;
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0);
  will-change: transform;
  -webkit-transition: -webkit-transform 0.3s ease-in-out;
  transition: -webkit-transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }

.menu--waiter-live .menu__waiter {
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1); }

/* 
*	Success messages
*/
.menu__success {
  /* Message triggered on and off with javaScript via their id hook */
  display: none;
  color: #4BB543;
  font-size: 22px;
  font-size: 2.2rem;
  line-height: 26px;
  line-height: 2.6rem;
  text-align: center; }
  @media screen and (min-width: 420px) {
    .menu__success {
      text-align: left; } }

/* 
*	The order now button
*/
.menu__button {
  font-size: 22px;
  font-size: 2.2rem;
  line-height: 22px;
  line-height: 2.2rem;
  padding: 15px 30px;
  border: 0;
  color: #fff;
  background-color: #237b98;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
  border-radius: 3px; }
  .menu__button:hover {
    background-color: #1c627a;
    cursor: pointer; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
