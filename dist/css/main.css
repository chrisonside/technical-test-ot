@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
*
* Border-box sizing by default
*
**/
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

/**
*
* Base font size for REM usage
*
**/
html {
  height: 100%;
  font-size: 62.5%; }

/**
*
* Clearfix
*
**/
.cf:after {
  content: "";
  display: table;
  clear: both; }

/**
*
* Vertical align
*
**/
/**
*
* Z-index levels
*
**/
/**
*
* REM mixin with pixel fallback
* -- Eduardo Bou√ßas (https://github.com/eduardoboucas/)
*
* NOTE: You must set the font-size to 62.5% on the html element!
*
**/
/**
*
* Colours named using http://chir.ag/projects/name-that-color/#FFFFFF
*
**/
/**
*
* Import fonts
*
**/
/**
*
* Page width constrain. Set the max and minimum width and use `@extend %constrain` to constrain the width.
*
**/
/**
*
* Set up a few basic font sizes for a consistent look across the site.
*
**/
body {
  font-size: 16px;
  font-size: 1.6rem;
  font-family: Arial, Helvetica, Verdana, sans-serif;
  -webkit-font-smoothing: antialiased;
  color: #333; }

h1,
h2,
h3 {
  font-family: "Lato", Arial, Helvetica, Verdana, sans-serif; }

h1 {
  font-size: 29px;
  font-size: 2.9rem;
  line-height: 38px;
  line-height: 3.8rem;
  margin-bottom: 15px; }

h2 {
  font-size: 23px;
  font-size: 2.3rem;
  line-height: 29px;
  line-height: 2.9rem;
  margin-bottom: 15px; }

h3 {
  font-size: 21px;
  font-size: 2.1rem;
  line-height: 26px;
  line-height: 2.6rem; }

p {
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 22px;
  line-height: 2.2rem;
  margin-bottom: 15px; }

.header {
  padding: 0 20px;
  background-color: #fff; }

.intro {
  padding: 20px;
  background-color: #f7f7f7; }

.menu {
  padding: 20px;
  background-color: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
